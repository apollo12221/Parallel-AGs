% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ag_analysis.R
\name{APC}
\alias{APC}
\title{Analyze an Attack Graph data with adapted PageRank Centrality (APC)}
\usage{
APC(
  edge.matrix,
  data.matrix,
  data.weight.vector = rep(1/ncol(data.matrix), ncol(data.matrix)),
  alpha = 0.5
)
}
\arguments{
\item{edge.matrix}{The Matrix of Attack Graph edges provided by the output of ag_generator() function.}

\item{data.matrix}{User-defined data matrix. The number of rows must equal to the number of Attack Graph nodes,
the number of columns equals to the number features.}

\item{data.weight.vector}{Add non-negative weights on the features(columns) of the data.matrix. The total
weight must be 1. The default vector assigns equal weight to each feature}

\item{alpha}{The coefficient to balance Attack Graph topology (edge.matrix) and user-defined data. Range
between 0 and 1, default 0.5.}
}
\value{
A list of exploit APC values, asset APC values, node APC values and node APC ranks
}
\description{
This function computes adapted PageRank centrality (APC) for given Attack Graphs
}
\details{
This function computes the APC values for every Attack Graph nodes and ranks them in a descending order.
Each node's APC value is also evenly distributed to its inbound edges and as such each edge has some partial
APC value. As Attack Graph edges are labeled with exploit ids or asset ids, by computing the total APC of edges
labeled by the same exploit/asset, an APC value is computed for each exploit/asset, based on which an order to
patch the exploits or defend the assets can be obtained. Therefore, in addition to node APC values and ranks,
this function also returns exploit APC values, asset APC values for user's subsequent analysis.
}
\examples{
APC(user_attack_graph$edge.matrix, matrix(1/N, nrow=N, ncol=1)) # Reduce to PageRank of Attack Graph
nodes, and N=user_attack_graph$nNodes
}
